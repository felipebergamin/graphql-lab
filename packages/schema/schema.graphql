directive @auth on OBJECT | FIELD_DEFINITION

scalar DateTime

type Password {
  id: ID!
  serviceUrl: String!
  serviceName: String!
  extraDescription: String
  password: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  passwords: [Password]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input NewUserInput {
  firstName: String!
  lastName: String!
  email: String!
  plainTextPassword: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  plainTextPassword: String
}

input SignInInput {
  email: String!
  plainTextPassword: String!
}

type AuthenticationPayload {
  accessToken: String!
  user: User!
}

input NewPasswordInput {
  serviceUrl: String!
  serviceName: String!
  extraDescription: String
  password: String!
}

type Mutation {
  newUser(input: NewUserInput!): User!
  authenticate(input: SignInInput!): AuthenticationPayload!
  updateProfile(input: UpdateUserInput!): User @auth
  newPassword(input: NewPasswordInput!): Password @auth
}

type Query {
  me: User! @auth
}
